; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32_wokwi

; Shared options
[env]
lib_archive = false
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:esp32_wokwi]
platform = espressif32
framework = arduino
board = esp32dev
lib_deps = 
	stevemarple/AsyncDelay@^1.1.2
	moononournation/GFX Library for Arduino@^1.3.1
	adafruit/Adafruit ILI9341@^1.5.12
	mathertel/OneButton@^2.0.3
build_flags =
  -D WOKWI_SIMULATION

[env:esp32]
platform = espressif32
framework = arduino
board = esp32dev
lib_deps = 
	stevemarple/AsyncDelay@^1.1.2
	moononournation/GFX Library for Arduino@^1.3.1
	adafruit/Adafruit ILI9341@^1.5.12
	mathertel/OneButton@^2.0.3
  ; Use direct URL, because package registry is unstable
  ;lvgl@~7.11.0
  lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.2.0.zip

  ; Use direct URL, because package registry is unstable
  ;lv_drivers@~7.9.0
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip

build_src_filter =
  +<*>
  +<../hal/sdl2>

extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D LV_FONT_MONTSERRAT_14=1
  -D LV_FONT_MONTSERRAT_20=1
  -D LV_FONT_MONTSERRAT_42=1
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=320  
  -D SDL_ZOOM=1
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  -I /opt/homebrew/Cellar/sdl2/2.26.3/include
  -L /opt/homebrew/Cellar/sdl2/2.26.3/lib
  -D LV_COLOR_16_SWAP
  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  ; Don't use lv_conf.h. Tweak params via platfom.ini.
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  ; Enable LVGL demo, remove when working on your own project
  -D LV_USE_DEMO_WIDGETS=1

  
[env:esp8266]
platform = espressif8266
framework = arduino
board = nodemcuv2
lib_deps = 
	stevemarple/AsyncDelay@^1.1.2
	moononournation/GFX Library for Arduino@^1.3.1
	adafruit/Adafruit ILI9341@^1.5.12
	mathertel/OneButton@^2.0.3

  ${env.lib_deps}
  ; Use direct URL, because package registry is unstable
  ;lv_drivers@~7.9.0
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip

build_src_filter =
  +<*>
  +<../hal/sdl2>

extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D LV_FONT_MONTSERRAT_14=1
  -D LV_FONT_MONTSERRAT_20=1
  -D LV_FONT_MONTSERRAT_42=1
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=320  
  -D SDL_ZOOM=1
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  -I /opt/homebrew/Cellar/sdl2/2.26.3/include
  -L /opt/homebrew/Cellar/sdl2/2.26.3/lib
  -D LV_COLOR_16_SWAP
  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  
  